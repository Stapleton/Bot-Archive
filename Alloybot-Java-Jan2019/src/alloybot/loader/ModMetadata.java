/*
 * Alloybot | Multipurpose "any-bot"
 *     Copyright (C) 2019 Taylor
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package loader;

import com.google.common.base.Joiner;
import com.google.common.collect.Lists;
import com.google.common.collect.Sets;
import loader.versioning.ArtifactVersion;

import java.util.List;
import java.util.Set;

public class ModMetadata {
    @SerializedName("plugid")
    public String plugId;
    public String name;
    public String description = "";

    public String url = "";
    public String updateJSON = "";

    public String logoFile = "";
    public String version = "";
    public List<String> authorList = Lists.newArrayList();
    public String credits = "";
    public String parent = "";
    public String[] screenshots;

    public transient PluginContainer parentPlugin;
    public transient List<PluginContainer> childPlugins = Lists.newArrayList();

    public boolean useDependencyInformation;
    public Set<ArtifactVersion> requiredPlugins = Sets.newHashSet();
    public List<ArtifactVersion> dependencies = Lists.newArrayList();
    public List<ArtifactVersion> dependants = Lists.newArrayList();
    public transient boolean autogenerated;

    public PluginMetadata() {}

    public String getChildPluginCountString() {
        return String.format("%d child plugin%s", childPlugins.size(), childPlugins.size() != 1 ? "s" : "");
    }

    public String getAuthorList() {
        return Joiner.on(", ").join(authorList);
    }

    public String getChildPluginList() {
        return Joiner.on(", ").join(childPlugins.stream().map(PluginContainer::getName).iterator());
    }

    public String printableSortingRules() {
        return "";
    }
}
